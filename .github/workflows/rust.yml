name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ "ubuntu-latest", "macos-latest", "windows-latest" ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: cargo build --verbose
      - name: Clippy
        run: cargo clippy
      - name: Run tests
        shell: bash
        run: RUST_BACKTRACE=full cargo test --verbose
      - name: Formatting
        run: cargo fmt -- --check
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: go-semantic-release/action@v1
        id: semrel
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          update-file: Cargo.toml
          changelog-file: CHANGELOG.md
          allow-initial-development-versions: true
      - run: cargo publish --token ${{ secrets.CARGO_TOKEN }}
        if: steps.semrel.outputs.version != ''
